
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath group: 'com.ning', name: 'async-http-client', version: '1.9.40'
    }
}


plugins {
    id "maven"
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0.0"
group = "me.preciouso.lobbynickcheck" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "LobbyNickCheck"

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

reobf {
    jar {
        extraLines "PK: com/ning/http/client me/preciouso/lobbynickcheck/MojangWrapper/com/ning/http/client"
        extraLines "PK: com/fasterxml/jackson/databind me/preciouso/lobbynickcheck/MojangWrapper/com/fasterxml/jackson/databind"
        extraLines "PK: org/slf4j/ me/preciouso/lobbynickcheck/MojangWrapper/org/slf4j/"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}


dependencies {
    // AT https://github.com/AsyncHttpClient/async-http-client/tree/caab7c778cc292113169dc7b78130b2e8ad96601
    // https://mvnrepository.com/artifact/com.ning/async-http-client
    // compile group: 'com.ning', name: 'async-http-client', version: '1.9.40'
    shade group: 'com.ning', name: 'async-http-client', version: '1.9.40'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    // compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    // shade group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
            // you may exclude other things here if you want, or maybe copy the META-INF
        }
    }
}

processResources {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
